"""
Django settings for fuel_project project.

Generated by 'django-admin startproject' using Django 5.2.

For more information on this file, see
https://docs.djangoproject.com/en/5.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.2/ref/settings/
"""

import os
from datetime import timedelta
from pathlib import Path

from dotenv import load_dotenv

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
load_dotenv()

SECRET_KEY = os.getenv("SECRET_KEY")


DEBUG = True
ALLOWED_HOSTS = [
    "https://fuel-route-optimizer.onrender.com",
    "fuel-route-optimizer.onrender.com",
]


INSTALLED_APPS = [
    "django.contrib.admin",
    "django.contrib.auth",
    "django.contrib.contenttypes",
    "django.contrib.sessions",
    "django.contrib.messages",
    "django.contrib.staticfiles",
    "django.contrib.gis",
    "ninja",
    "ninja_extra",
    "ninja_jwt.token_blacklist",
    "itsdangerous",
    "fuel_route_api",
    "starlette",
    "whitenoise",
    "ninja_jwt",
    "celery",
    "redis",
    "django_redis",
]

MIDDLEWARE = [
    "django.middleware.security.SecurityMiddleware",
    "django.contrib.sessions.middleware.SessionMiddleware",
    "django.middleware.common.CommonMiddleware",
    "django.middleware.csrf.CsrfViewMiddleware",
    "django.contrib.auth.middleware.AuthenticationMiddleware",
    "fuel_route_api.middleware.JWTAuthenticationMiddleware",
    "django.contrib.messages.middleware.MessageMiddleware",
    "django.middleware.clickjacking.XFrameOptionsMiddleware",
    "fuel_route_api.middleware.AutoLogoutMiddleware",
]

ROOT_URLCONF = "fuel_project.urls"
STATIC_URL = "/static/"
STATIC_ROOT = BASE_DIR / "staticfiles"
TEMPLATES = [
    {
        "BACKEND": "django.template.backends.django.DjangoTemplates",
        "DIRS": [BASE_DIR / "templates"],
        "APP_DIRS": True,
        "OPTIONS": {
            "context_processors": [
                "django.template.context_processors.request",
                "django.contrib.auth.context_processors.auth",
                "django.contrib.messages.context_processors.messages",
            ],
        },
    },
]

WSGI_APPLICATION = "fuel_project.wsgi.application"


DATABASES = {
    "default": {
        "ENGINE": "django.contrib.gis.db.backends.postgis",
        "NAME": os.getenv("SUPABASE_NAME"),
        "USER": os.getenv("SUPABASE_USER"),
        "PASSWORD": os.getenv("SUPABASE_PASSWORD"),
        "HOST": os.getenv("SUPABASE_HOST"),
        "PORT": os.getenv("SUPABASE_PORT"),
        "CONN_MAX_AGE": 0,
        "OPTIONS": {
            "sslmode": "require",
        },
    }
}


# Password validation
# https://docs.djangoproject.com/en/5.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        "NAME": "django.contrib.auth.password_validation.UserAttributeSimilarityValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.MinimumLengthValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.CommonPasswordValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.NumericPasswordValidator",
    },
]

NINJA_EXTRA = {
    "PAGINATION_CLASS": "ninja_extra.pagination.PageNumberPaginationExtra",
    "PAGINATION_PER_PAGE": 10,
    "THROTTLE_CLASSES": [
        "ninja_extra.throttling.AnonRateThrottle",
        "ninja_extra.throttling.UserRateThrottle",
    ],
    "THROTTLE_RATES": {
        "anon": "100/day",
        "user": "1000/day",
    },
    "INJECTOR_MODULES": [],
}
CACHES = {
    "default": {
        "BACKEND": "django_redis.cache.RedisCache",
        "LOCATION": os.getenv("CACHE_LOCATION"),
        "OPTIONS": {
            "PASSWORD": os.getenv("CACHE_PASSWORD"),
            "CLIENT_CLASS": "django_redis.client.DefaultClient",
            "CONNECTION_POOL_KWARGS": {"max_connections": 10},
        },
    }
}


CSRF_TRUSTED_ORIGINS = [
    "https://fuel-route-optimizer.onrender.com",
]
CORS_ALLOW_CREDENTIALS = True
CORS_ALLOWED_ORIGINS = [
    "http://localhost:3000",
    "http://127.0.0.1:3000",
    "https://fuel-route-optimizer.onrender.com",
]
# Internationalization
# https://docs.djangoproject.com/en/5.2/topics/i18n/
# for production
# SESSION_COOKIE_SECURE = True
# SESSION_COOKIE_HTTPONLY = True
# SESSION_COOKIE_SAMESITE = 'Lax'
# for development
SESSION_COOKIE_SECURE = False
SESSION_COOKIE_HTTPONLY = False
SESSION_COOKIE_SAMESITE = "Lax"
SESSION_COOKIE_AGE = 300
SESSION_SAVE_EVERY_REQUEST = True
SIMPLE_JWT = {
    "ACCESS_TOKEN_LIFETIME": timedelta(minutes=10),
    "REFRESH_TOKEN_LIFETIME": timedelta(days=1),
    "ROTATE_REFRESH_TOKENS": False,
    "BLACKLIST_AFTER_ROTATION": True,
}
LANGUAGE_CODE = "en-us"

TIME_ZONE = "UTC"

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.2/howto/static-files/

STATIC_URL = "static/"

# Default primary key field type
# https://docs.djangoproject.com/en/5.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = "django.db.models.BigAutoField"


CELERY_BROKER_URL = os.getenv("REDIS_URL")


CELERY_RESULT_BACKEND = os.getenv("REDIS_URL")

CELERY_ACCEPT_CONTENT = ["json"]
CELERY_TASK_SERIALIZER = "json"
CELERY_RESULT_SERIALIZER = "json"
CELERY_TIMEZONE = "UTC"


CELERY_BROKER_USE_SSL = None
CELERY_REDIS_BACKEND_USE_SSL = None

CELERY_BROKER_POOL_LIMIT = 5
CELERY_REDIS_MAX_CONNECTIONS = 10
CELERY_WORKER_CONCURRENCY = 1

# USE ONLY IN DEVELOPMENT FOR WINDOWS
# GDAL_LIBRARY_PATH = r"C:/OSGeo4W/bin/gdal311.dll"
# if os.name == "nt":
#     OSGEO4W = r"C:/OSGeo4W"
#     assert os.path.isdir(OSGEO4W), "OSGeo4W directory not found" + OSGEO4W
#     os.environ["OSGEO4W_ROOT"] = OSGEO4W
#     os.environ["GDAL_DATA"] = OSGEO4W + r"\share\gdal"
#     os.environ["PROJ_LIB"] = OSGEO4W + r"\share\proj"
#     os.environ["PATH"] = OSGEO4W + r"\bin;" + os.environ["PATH"]
